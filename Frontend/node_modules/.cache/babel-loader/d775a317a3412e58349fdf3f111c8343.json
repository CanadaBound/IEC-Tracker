{"ast":null,"code":"var _jsxFileName = \"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../CSS/Forms/EditForm.css';\nimport { getSingleCountry, getData } from '../../HelperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditForm() {\n  _s();\n\n  const [quota, setQuota] = useState('');\n  const [season, setSeason] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [prevButton, setPrevButton] = useState();\n  const [initLoad, setInitLoad] = useState(true);\n  const [originalCountryArr, setOriginalCountryArr] = useState([]);\n  const [countryArr, setCountryArr] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const containerRef = useRef();\n\n  function onUpdate(e, id) {\n    e.preventDefault();\n    axios.put(`countries/${id}`, {\n      country_name: selectedCountry.country_name,\n      country_quota: quota,\n      country_season: season\n    }).then(function (response) {\n      setQuota('');\n      setSeason('');\n      showForm(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function toggleForm(e, id) {\n    if (e.currentTarget.className === 'Edit-Season-Selector-Button') {\n      setShowForm(true);\n      e.currentTarget.className = 'Edit-Season-Selector-Button-Active';\n      getSingleCountry(id).then(res => {\n        setSelectedCountry(res.data);\n      });\n\n      if (prevButton !== null || typeof prevButton !== 'undefined') {\n        var localArr = containerRef.current.childNodes;\n\n        for (let i = 0; i < localArr.length; i++) {\n          if (localArr[i].id === prevButton) {\n            localArr[i].className = 'Edit-Season-Selector-Button';\n          }\n        }\n      }\n\n      setPrevButton(e.currentTarget.id);\n    } else {\n      e.currentTarget.className = 'Edit-Season-Selector-Button';\n      setSelectedCountry([]);\n      setShowForm(false);\n    }\n  }\n\n  useEffect(() => {\n    if (!initLoad) {\n      if (searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined') {\n        console.log('no search text');\n        var noSearchCopy = [...originalCountryArr];\n        setCountryArr(noSearchCopy.sort());\n      } else {\n        var copyArr = [...originalCountryArr];\n        copyArr = copyArr.filter(country => country.country_name.toLowerCase().includes(searchValue.toLowerCase())).sort();\n        setCountryArr(copyArr);\n      }\n    } else {\n      setInitLoad(false);\n    }\n  }, [searchValue]);\n  useEffect(() => {\n    if (selectedCountry !== null || selectedCountry !== 'undefined') {\n      setQuota(selectedCountry.country_quota);\n      setSeason(selectedCountry.country_season);\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    getData().then(res => {\n      setOriginalCountryArr(res.data);\n      setCountryArr(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Edit-Season-Title\",\n      children: \" Edit Season Quotas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Edit-Season-Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Edit-Season-Country-Selector\",\n        ref: containerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search..\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value),\n          className: \"Edit-Season-Country-Selector-Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this), countryArr.map(country => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Edit-Season-Selector-Button\",\n          id: country._id,\n          onClick: e => toggleForm(e, country._id),\n          children: country.country_name\n        }, country.country_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 31\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 4\n      }, this), showForm ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Edit-Season-Form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quota:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: quota,\n          onChange: e => setQuota(e.currentTarget.value),\n          placeholder: selectedCountry.country_quota\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Season:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: season,\n          onChange: e => setSeason(e.currentTarget.value),\n          placeholder: selectedCountry.country_season\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"Submit-Button\",\n          onClick: e => onUpdate(e, selectedCountry._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Edit-Season-Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditForm, \"jpiNvJU53BoSr8Xfxu/kaS9iUvs=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditForm.js"],"names":["useState","useRef","useEffect","axios","getSingleCountry","getData","EditForm","quota","setQuota","season","setSeason","searchValue","setSearchValue","prevButton","setPrevButton","initLoad","setInitLoad","originalCountryArr","setOriginalCountryArr","countryArr","setCountryArr","selectedCountry","setSelectedCountry","showForm","setShowForm","containerRef","onUpdate","e","id","preventDefault","put","country_name","country_quota","country_season","then","response","catch","error","console","log","toggleForm","currentTarget","className","res","data","localArr","current","childNodes","i","length","noSearchCopy","sort","copyArr","filter","country","toLowerCase","includes","target","value","map","_id"],"mappings":"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","sourcesContent":["import {useState, useRef, useEffect} from 'react';\nimport axios from 'axios';\nimport '../../CSS/Forms/EditForm.css';\n\nimport {getSingleCountry, getData} from '../../HelperFunctions';\n\nfunction EditForm(){\n\n\n\tconst [quota, setQuota] = useState('');\n\tconst [season, setSeason] = useState('');\n\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [prevButton, setPrevButton] = useState();\n\tconst [initLoad, setInitLoad] = useState(true);\n\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\tconst [selectedCountry, setSelectedCountry] = useState([]);\n\n\tconst [showForm, setShowForm] = useState(false);\n\t\n\n\tconst containerRef = useRef();\n\n\tfunction onUpdate(e,id){\n\t\te.preventDefault();\n\n\t\taxios.put(`countries/${id}`, {\n\t\t\tcountry_name: selectedCountry.country_name,\n\t\t\tcountry_quota: quota,\n\t\t\tcountry_season: season\n\t\t  })\n\t\t  .then(function (response) {\n\t\t\tsetQuota('');\n\t\t\tsetSeason('');\n\t\t\tshowForm(false);\n\t\t  })\n\t\t  .catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t  });\n\t}\n\n\tfunction toggleForm(e, id){\n\t\t\n\t\tif(e.currentTarget.className === 'Edit-Season-Selector-Button'){\n\t\t\tsetShowForm(true);\n\t\t\te.currentTarget.className = 'Edit-Season-Selector-Button-Active';\n\t\t\tgetSingleCountry(id).then(res=>{\n\t\t\t\tsetSelectedCountry(res.data);\n\t\t\t})\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\tif(localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'Edit-Season-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'Edit-Season-Selector-Button'\n\t\t\tsetSelectedCountry([]);\n\t\t\tsetShowForm(false);\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\t\n\t\tif(!initLoad){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\t\tconsole.log('no search text');\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy.sort());\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase())).sort();\n\t\t\t\n\t\t\t\tsetCountryArr(copyArr);\n\n\t\t\t}\n\t\t}else{\n\t\t\tsetInitLoad(false);\n\t\t}\n\t\t\n\t},[searchValue])\n\n\tuseEffect(()=>{\n\t\tif(selectedCountry !==null || selectedCountry !== 'undefined'){\n\t\t\tsetQuota(selectedCountry.country_quota);\n\t\t\tsetSeason(selectedCountry.country_season);\n\t\t}\n\n\t},[selectedCountry])\n\n\tuseEffect(()=>{\n\n\t\t\tgetData().then(res=>{\n\t\t\t\tsetOriginalCountryArr(res.data);\n\t\t\t\tsetCountryArr(res.data);\n\n\t\t\t});\n\t\t\t\n\t\t\n\t},[]);\n\t\n\n\treturn(\n\t\t<>\n\t\t<h1 className='Edit-Season-Title'> Edit Season Quotas</h1>\n\t\t<div className='Edit-Season-Container'>\n\n\t\t\t<div className='Edit-Season-Country-Selector' ref = {containerRef}>\n\t\t\t\t<input type=\"search\" placeholder=\"Search..\" value={searchValue} onChange={(e)=>setSearchValue(e.target.value)} className='Edit-Season-Country-Selector-Search'/>\n\t\t\t\t{countryArr.map(country=> <button key ={country.country_name} className='Edit-Season-Selector-Button' id={country._id} onClick={(e)=>toggleForm(e, country._id)}>{country.country_name}</button>)}\n\n\t\t\t</div>\n\t\t\t{showForm? <form className='Edit-Season-Form'>\n\t\t\t\t<label>Quota:</label>\n\t\t\t\t<input type='text' value={quota} onChange={(e)=>setQuota(e.currentTarget.value)} placeholder={selectedCountry.country_quota}/>\n\t\t\t\t<label>Season:</label>\n\t\t\t\t<input type='text' value={season} onChange={(e)=>setSeason(e.currentTarget.value)} placeholder={selectedCountry.country_season}/>\n\t\t\t\t<input type='submit' className='Submit-Button' onClick={(e)=>onUpdate(e,selectedCountry._id)}/>\n\t\t\t</form>:<form className='Edit-Season-Form'></form>}\n\n\t\t</div>\n\t\t</>\n\t);\n\n}\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}