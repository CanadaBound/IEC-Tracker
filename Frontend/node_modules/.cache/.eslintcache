[{"/Users/danielnamyslaw/iec-tracker/Frontend/src/index.js":"1","/Users/danielnamyslaw/iec-tracker/Frontend/src/reportWebVitals.js":"2","/Users/danielnamyslaw/iec-tracker/Frontend/src/App.js":"3","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/LandingPage.js":"4","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/AdminDashboard.js":"5","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Navigation.js":"6","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/ROIForm.js":"7","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Card.js":"8","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/CountryForm.js":"9","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Search.js":"10","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Quotes.js":"11","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/AdminNavigation.js":"12","/Users/danielnamyslaw/iec-tracker/Frontend/src/HelperFunctions.js":"13","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/NewForm.js":"14","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/NewROIForm.js":"15","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditROIForm.js":"16","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/DeleteROIForm.js":"17","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/DeleteForm.js":"18","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditForm.js":"19","/Users/danielnamyslaw/iec-tracker/Frontend/src/Assets/Data/QuoteList.js":"20"},{"size":501,"mtime":1642332901626,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1642197614058,"results":"23","hashOfConfig":"22"},{"size":1373,"mtime":1643877615710,"results":"24","hashOfConfig":"22"},{"size":1437,"mtime":1643714803289,"results":"25","hashOfConfig":"22"},{"size":607,"mtime":1642340282221,"results":"26","hashOfConfig":"22"},{"size":5465,"mtime":1643877570056,"results":"27","hashOfConfig":"22"},{"size":3640,"mtime":1643713792381,"results":"28","hashOfConfig":"22"},{"size":11868,"mtime":1644147710348,"results":"29","hashOfConfig":"22"},{"size":3713,"mtime":1643713821143,"results":"30","hashOfConfig":"22"},{"size":3564,"mtime":1643713544553,"results":"31","hashOfConfig":"22"},{"size":1346,"mtime":1643713993077,"results":"32","hashOfConfig":"22"},{"size":3745,"mtime":1643877398425,"results":"33","hashOfConfig":"22"},{"size":1586,"mtime":1644145598330,"results":"34","hashOfConfig":"22"},{"size":4839,"mtime":1644145610593,"results":"35","hashOfConfig":"22"},{"size":8753,"mtime":1644146207174,"results":"36","hashOfConfig":"22"},{"size":8488,"mtime":1644146386060,"results":"37","hashOfConfig":"22"},{"size":6025,"mtime":1644146259003,"results":"38","hashOfConfig":"22"},{"size":2580,"mtime":1643878787744,"results":"39","hashOfConfig":"22"},{"size":4755,"mtime":1644146172368,"results":"40","hashOfConfig":"22"},{"size":1227,"mtime":1643280263072,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cd20t0",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielnamyslaw/iec-tracker/Frontend/src/index.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/reportWebVitals.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/App.js",["92"],"\nimport './App.css';\n\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport LandingPage from './Components/LandingPage';\nimport AdminDashboard from './Components/AdminDashboard';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n\nfunction App() {\n\n  const [adminView, setAdminView] = useState(false);\n\n  //This useEffect runs when a person first opens the page and it sends a request to the backend to verify if there is a cookie stored from previous login,\n\t//and if there is a cookie, if it's still valid. If it is, you will automatically go into Admin mode otherwise you will have to log in again.\n\tuseEffect(()=>{\n\t\taxios.get('/auth')\n\t\t\t.then(res=>{\n\t\t\t\tif(res.status === 200){\n\t\t\t\t\tsetAdminView(true);\n\t\t\t\t}else{\n\t\t\t\t\tsetAdminView(false);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tsetAdminView(false);\n\t\t\t})\n\t},[]);\n\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <Routes>\n          <Route path ='/' element={\n          \n             <LandingPage/>\n        \n          }/>\n         {/* {adminView?<Route path ='/Admin' element={<AdminDashboard/>}/>:<Route path='/Admin' element={<Navigate replace to=\"/\" />}/>} */}\n         <Route path ='/Admin' element={adminView?<AdminDashboard/>:<LandingPage/>}/>\n          \n        </Routes>\n        \n      </div>\n    </BrowserRouter>\n   \n  );\n}\n\nexport default App;\n",["93","94"],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/LandingPage.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/AdminDashboard.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Navigation.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/ROIForm.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Card.js",["95"],"import { useEffect, useRef, useState } from 'react';\nimport '../CSS/Card.css';\n\nimport {getSingleCountryByName, getAllCountryROI} from '../HelperFunctions';\n\nfunction Card({selectedCountry, selectedCountryArr, setSelectedCountryArr}){\n\n\tconst [showCountryCard, setShowCountryCard] = useState(false);\n\t\n\tconst [selectedCountryData, setSelectedCountryData]= useState({});\n\tconst [selectedCountryROIData, setSelectedCountryROIData]= useState([]);\n\n\tconst [slicedROIArr, setslicedROIArr] = useState([]);\n\n\tconst [favourite, setFavourite] = useState(false);\n\n\n\tconst [onePersonPct, setOnePersonPct] = useState('');\n\tconst [twoPeoplePct, setTwoPeoplePct] = useState('');\n\n\tconst [chanceClassContainer, setChanceClassContainer] = useState('Chance-Container');\n\tconst [chanceClassP, setChanceClassP] = useState('Chances-Title');\n\n\tconst [cardContainer, setCardContainer] = useState('Card-Container');\n\tconst [cardName, setCardName] = useState('Country-Name');\n\tconst [cardQuota, setCardQuota] = useState('Country-Quota');\n\tconst [cardCandidates, setCardCandidates] = useState('Country-Candidates');\n\tconst [cardPermits, setCardPermits] = useState('Country-Permits');\n\tconst [cardHistory, setCardHistory] = useState('Historical-Draws');\n\n\tconst chanceRef = useRef();\n\t\n\t//When a user wants to remove the country they selected from the card, this function will run and filter\n\t//the array of selected countries removing that specific country and then set the selected country arr to the new version of the array.\n\tfunction deleteCard(country){\n\t\tlet filteredArr = selectedCountryArr.filter(countryItem=> country!== countryItem);\n\t\tsetSelectedCountryArr(filteredArr);\n\t}\n\n\t//This handles the favourite system, which will save the country so thay when the user comes back to the website\n\t//they will see their selected country automatically.  We essentially check if the two favourite slots have been\n\t//previously defined and if they haven't we set the country to the available slot. If the country that the button was pressed on,\n\t//matches one in the storage (essentially a user unfavourited a country) the value will be removed from local storage.\n\tfunction favouriteCard(country){\n\t\tif(localStorage.getItem('FavouriteOne')=== null && localStorage.getItem('FavouriteTwo')=== null){\n\t\t\tlocalStorage.setItem('FavouriteOne', country);\n\t\t\tsetFavourite(true);\n\t\t}else if(localStorage.getItem('FavouriteOne')!== country && localStorage.getItem('FavouriteTwo')=== null){\n\t\t\tlocalStorage.setItem('FavouriteTwo', country);\n\t\t\tsetFavourite(true);\n\t\t}else if(localStorage.getItem('FavouriteOne')=== country){\n\t\t\tlocalStorage.removeItem('FavouriteOne');\n\t\t\tsetFavourite(false);\n\t\t}else if(localStorage.getItem('FavouriteTwo')=== country){\n\t\t\tlocalStorage.removeItem('FavouriteTwo');\n\t\t\tsetFavourite(false);\n\t\t}\n\t\n\t\t\n\t}\n\n\t/*This handles showing the cards and getting the data. As long as there is at least 1 country selected,\n\twe get the season and round of invitation data and we sort the ROI data by date from closest to furthest from today.\n\tIf theres 2 selected countries we display the second card which otherwise would be set to display:none;*/\n\t\n\tuseEffect(()=>{\n\t\t\n\t\t\tif(selectedCountry.length === 0){\n\t\t\t\tsetShowCountryCard(false);\n\t\t\t}else{\n\t\t\t\tgetSingleCountryByName(selectedCountry).then(res=> setSelectedCountryData(res.data[0]));\n\t\t\t\tgetAllCountryROI(selectedCountry).then(res=>{\n\t\t\t\t\tsetSelectedCountryROIData(res.data.sort((a,b)=>new Date(b.country_date)-new Date(a.country_date)));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(selectedCountryArr.length >0){\n\t\t\t\tif(selectedCountry === selectedCountryArr[1]){\n\t\t\t\t\tsetCardContainer('Card-Container-Two');\n\t\t\t\t\tsetCardName('Country-Name-Two');\n\t\t\t\t\tsetCardQuota('Country-Quota-Two');\n\t\t\t\t\tsetCardCandidates('Country-Candidates-Two');\n\t\t\t\t\tsetCardPermits('Country-Permits-Two');\n\t\t\t\t\tsetCardHistory('Historical-Draws-Two');\n\t\t\t\t}\n\t\t\t}\t\n\t},[selectedCountry, selectedCountryArr])\n\n\t\n\t/*This manipulates the data to be ready for display. We check that the data we're going to work with exists. From the ROI data we take\n\ta maximum of 3 values to display later. We calculate the percentages of someone receiving an invite, this can be greater than 100% so\n\tif that does happen we round it back down to 100%*/\n\tuseEffect(()=>{\n\t\t\n\t\tif(selectedCountryROIData !== null && typeof selectedCountryROIData !== 'undefined' && selectedCountryROIData.length > 0 &&selectedCountryData.country_name !== 'Australia'){\n\t\t\t\n\t\t\tsetShowCountryCard(true);\n\t\t\tvar copyArr = [...selectedCountryROIData];\n\t\t\tcopyArr = copyArr.slice(0,2);\n\t\t\tsetslicedROIArr(copyArr);\n\t\t\n\t\t\tif(parseInt(selectedCountryData.country_quota-selectedCountryROIData[0].country_invitations)/parseInt(selectedCountryROIData[0].country_candidates)>1){\n\t\t\t\tsetOnePersonPct('100%');\n\t\t\t\tsetTwoPeoplePct('100%');\n\t\t\t}else{\n\t\t\t\tvar person1 = parseInt(selectedCountryData.country_quota-selectedCountryROIData[0].country_invitations)/parseInt(selectedCountryROIData[0].country_candidates);\n\t\t\t\tvar person2 = parseInt(selectedCountryData.country_quota-selectedCountryROIData[0].country_invitations)/parseInt(selectedCountryROIData[0].country_candidates);\n\t\t\t\tsetOnePersonPct(Math.round((person1)*100)+'%');\n\t\t\t\tsetTwoPeoplePct(Math.round((person1*person2)*100)+'%');\n\t\t\t}\n\n\t\t}else{\n\t\t\tsetOnePersonPct('100%');\n\t\t\tsetTwoPeoplePct('100%');\n\t\t}\n\t},[selectedCountryROIData, selectedCountryData.country_name]);\n\n\t//This changes the color of the chance box. 50%+ = green, 30-50%+ = orange, below 30% = red\n\tuseEffect(()=>{\n\t\n\t\tif(parseInt(onePersonPct)>=50){\n\t\t\tsetChanceClassContainer('Chance-Container');\n\t\t\tsetChanceClassP('Chances-Title');\n\t\t}else if(parseInt(onePersonPct)>=30){\n\t\t\tsetChanceClassContainer('Chance-Container-Neutral');\n\t\t\tsetChanceClassP('Chances-Title-Neutral');\n\t\t}else{\n\t\t\tsetChanceClassContainer('Chance-Container-Negative');\n\t\t\tsetChanceClassP('Chances-Title-Negative');\n\t\t}\n\n\t},[onePersonPct])\n\n\t/*This is only required for when a user has favourited a country and then comes back on to the site. Without it\n\tthe favourite button is not made active on initial load.*/\n\tuseEffect(()=>{\n\n\t\tif(localStorage.getItem('FavouriteOne')!== null){\n\t\t\tsetFavourite(true);\n\t\t}else if(localStorage.getItem('FavouriteTwo')!== null){\n\t\t\tsetFavourite(true);\n\t\t}\n\n\t},[]);\n\n\n\treturn(\n\t\t<>\n\t\t{showCountryCard ? \n\t\t<div className='Full-Card-Wrapper'>\n\t\t\t<button className={favourite?'Favourite-Button-Active':'Favourite-Button'} onClick={()=>favouriteCard(selectedCountry)}>\n\t\t\t\t\n\t\t\t\t<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"#AAAAAA\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M26.2787 0.0679245C24.9003 0.311703 23.6719 1.10867 22.9124 2.25256C22.453 2.9417 22.5373 2.69792 20.7792 8.36109C20.4182 9.51904 19.8978 11.188 19.6258 12.0647C19.3539 12.9413 18.8382 14.5962 18.4818 15.7448L17.8348 17.8263L17.2722 17.9997C16.6299 18.2013 13.8919 19.0499 12.3072 19.5421C11.7164 19.7296 10.9006 19.9828 10.5021 20.1047C2.93966 22.4534 3.13189 22.3878 2.63022 22.6737C0.787668 23.7098 -0.234412 25.7585 0.0515826 27.8212C0.21099 28.9885 0.745472 30.0152 1.62221 30.8403C1.88007 31.0841 3.91017 32.5421 8.17196 35.5518L14.3513 39.9117L14.3232 41.1072C14.2763 43.2683 14.1966 50.6942 14.1872 53.2023C14.1825 55.7901 14.1825 55.7808 14.4029 56.484C14.5482 56.9528 14.9233 57.6372 15.2515 58.0545C16.719 59.9109 19.2836 60.5157 21.4027 59.5124C21.9513 59.2546 21.8763 59.3062 24.4033 57.4216C25.5661 56.5543 28.2572 54.5478 30.3905 52.9539L34.2631 50.0613L35.1024 50.3473C35.5618 50.5067 36.6214 50.863 37.4606 51.149C39.8799 51.9694 41.2442 52.4288 44.001 53.3664C48.4082 54.8619 48.7457 54.9744 49.1911 55.0494C51.6057 55.4667 54.0015 54.0602 54.8266 51.7443C55.1267 50.9052 55.2064 50.0191 55.0611 49.1659C55.0095 48.8659 54.7141 47.9283 54.1421 46.2406C53.2279 43.5496 52.6324 41.7869 51.9057 39.6445C51.6526 38.8897 51.1321 37.3661 50.7571 36.2644L50.0772 34.2532L52.9653 30.3809C54.5594 28.2478 56.6176 25.4912 57.5412 24.2536C58.9431 22.3784 59.2619 21.9189 59.4776 21.4876C60.3355 19.7437 60.1339 17.6903 58.9525 16.1386C58.2257 15.1822 57.213 14.5493 55.9331 14.2352C55.7315 14.1883 55.1126 14.1743 53.1435 14.179C50.6586 14.1883 43.6166 14.268 41.1645 14.3149L39.9221 14.3384L35.5618 8.16888C33.166 4.77473 31.1031 1.88689 30.9812 1.74625C29.8091 0.405464 27.9994 -0.236797 26.2787 0.0679245Z\" fill=\"#FFC905\" stroke='#FFA505' strokeWidth='2'fillOpacity=\"1\"/>\n\t\t\t\t</svg>\n\n\t\t\t</button>\n\t\t\t{favourite? null:<button className='Bin-Button' onClick={()=>deleteCard(selectedCountry)}>\n\t\t\t\t<svg width=\"50\" height=\"60\" viewBox=\"0 0 50 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M2.5 15V60H47.5V15H2.5ZM15 50C15 51.38 13.88 52.5 12.5 52.5C11.12 52.5 10 51.38 10 50V25C10 23.62 11.12 22.5 12.5 22.5C13.88 22.5 15 23.62 15 25V50ZM27.5 50C27.5 51.38 26.38 52.5 25 52.5C23.62 52.5 22.5 51.38 22.5 50V25C22.5 23.62 23.62 22.5 25 22.5C26.38 22.5 27.5 23.62 27.5 25V50ZM40 50C40 51.38 38.88 52.5 37.5 52.5C36.12 52.5 35 51.38 35 50V25C35 23.62 36.12 22.5 37.5 22.5C38.88 22.5 40 23.62 40 25V50ZM50 5V10H0V5H14.2775C16.5275 5 18.355 2.2525 18.355 0H31.6425C31.6425 2.2525 33.4675 5 35.72 5H50Z\" fill=\"#FF0000\" fillOpacity=\"1\"/>\n\t\t\t\t</svg>\n\t\t\t\t\n\t\t\t</button>}\n\t\t\t\n\t\t\t<article className={cardContainer}>\n\t\t\t\t<section className={cardName}>\n\t\t\t\t\t<p>{selectedCountryData.country_name}</p>\n\t\t\t\t</section>\n\t\t\t\t<section className={cardQuota}>\n\t\t\t\t\t<p>Quota:</p>\n\t\t\t\t\t<p>{selectedCountryData.country_name ==='Australia'?'Unlimited':selectedCountryData.country_quota}</p> \n\t\t\t\t</section>\n\t\t\t\t<section className={cardCandidates}>\n\t\t\t\t\t<p>Candidates:</p>\n\t\t\t\t\t<p>{parseInt(selectedCountryROIData[0].country_candidates)}</p>\n\t\t\t\t</section>\n\t\t\t\t<section className={cardPermits}>\n\t\t\t\t\t<p>Permits Left:</p>\n\t\t\t\t\t<p>{selectedCountryData.country_name === 'Australia'?'Unlimited':selectedCountryData.country_quota-selectedCountryROIData[0].country_invitations}</p>\n\t\t\t\t</section>\n\t\t\t\t<section className={cardHistory}>\n\t\t\t\t\t<p className='Historical-Title'>Historical Draws (Previous 3 weeks)</p>\n\t\t\t\t\t<div className='Historical-Data-Container'>\n\t\t\t\t\t\t<div className='Dates'>\n\t\t\t\t\t\t\t{selectedCountryROIData.length <= 3? selectedCountryROIData.map(roi=><p key={roi._id}>{roi.country_date}</p>):slicedROIArr.map(roi=><p key={roi._id}>{roi.country_date}</p>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Permits'>\n\t\t\t\t\t\t\t{selectedCountryROIData.length>3?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[1].country_invitations-selectedCountryROIData[0].country_invitations}</p>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[2].country_invitations-selectedCountryROIData[1].country_invitations}</p>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[3].country_invitations-selectedCountryROIData[2].country_invitations}</p>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[0].country_invitations-selectedCountryROIData[1].country_invitations}</p>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[1].country_invitations}</p>\n\t\t\t\t\t\t\t<p>{selectedCountryROIData[2].country_invitations}</p>\n\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</article>\n\t\t\t<aside ref={chanceRef} className={chanceClassContainer}>\n\t\t\t\t<p className={chanceClassP}>Chance</p>\n\t\t\t\t<div className='Chances-Layout'>\n\t\t\t\t\t<div className='One-Person'>\n\t\t\t\t\t\t<p>1 Person:</p>\n\t\t\t\t\t\t<p>{onePersonPct}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='Two-People'>\n\t\t\t\t\t\t<p>2 People:</p>\n\t\t\t\t\t\t<p>{twoPeoplePct}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</aside>\n\t\t</div>\n\t\t\n\t\t: null\n\t\t\n\t\t}\n\t\t\n\t\t{selectedCountry.length <2 ? <button className=\"Card-Border\">\n\t\t\t<p className=\"Card-Text\">\n\t\t\tYou have not selected a country.\n\t\t\t</p>\n\n\t\t\t<p className=\"Card-Text\">\n\t\t\tPlease use the search bar above to make a selection.\n\t\t\t</p>\n\n\t\t\t<p className='Card-Text'>\n\t\t\tOr click on this card!\n\t\t\t</p>\n\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path fill='#AAA' d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n\t\t</button>:null}\n\t\t\n\t\t</>\n\t);\n}\nexport default Card;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/CountryForm.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Search.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Quotes.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/AdminNavigation.js",["96","97"],"import '../CSS/Navigation.css';\nimport axios from 'axios';\nimport {useNavigate, Link} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nfunction AdminNavigation(){\n\n\tlet navigate = useNavigate();\n\n\tconst [toggleDropdown, setToggleDropdown]= useState(false);\n\tconst [adminView, setAdminView] = useState(false);\n\n\n\t//This function handles logging out, it will send a request to the backend which will remove the cookie created on log in, it will also remove\t\n\t//the username stored in local storage and redirect you back to the homepage and set the adminView state to false\n\t//to show the log in form.\n\tfunction handleLogout(){\n\t\taxios.get('/logout').then(res=>localStorage.removeItem(\"username\")).catch(err=>console.log(err));\n\t\tnavigate('/', { replace: true });\n\t\tsetToggleDropdown(false);\n\t\tsetAdminView(false);\n\t}\n\n\t//This useEffect runs when a person first opens the page and it sends a request to the backend to verify if there is a cookie stored from previous login,\n\t//and if there is a cookie, if it's still valid. If it is, you will automatically go into Admin mode otherwise you will have to log in again.\n\tuseEffect(()=>{\n\t\taxios.get('/auth')\n\t\t\t.then(res=>{\n\t\t\t\tif(res.status === 200){\n\t\t\t\t\tsetAdminView(true);\n\t\t\t\t}else{\n\t\t\t\t\tsetAdminView(false);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tsetAdminView(false);\n\t\t\t})\n\t},[]);\n\n\n\nreturn(\n\t<>\n\t\t<header className=\"Header-Container\">\n\t\t\t<nav className=\"Navigation-Menu\">\n\t\t\n\t\t\t\t<button className={toggleDropdown?'Admin-Button-Loggedin-Active':\"Admin-Button\"} onClick={()=>setToggleDropdown(prev=>!prev)}>\n\t\t\t\t<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"user-circle\" className=\"svg-inline--fa fa-user-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\"><path fill='#cccccc' d=\"M248 104c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96zm0 144c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm0-240C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-49.7 0-95.1-18.3-130.1-48.4 14.9-23 40.4-38.6 69.6-39.5 20.8 6.4 40.6 9.6 60.5 9.6s39.7-3.1 60.5-9.6c29.2 1 54.7 16.5 69.6 39.5-35 30.1-80.4 48.4-130.1 48.4zm162.7-84.1c-24.4-31.4-62.1-51.9-105.1-51.9-10.2 0-26 9.6-57.6 9.6-31.5 0-47.4-9.6-57.6-9.6-42.9 0-80.6 20.5-105.1 51.9C61.9 339.2 48 299.2 48 256c0-110.3 89.7-200 200-200s200 89.7 200 200c0 43.2-13.9 83.2-37.3 115.9z\"></path></svg>\n\t\t\t\t</button>\n\t\t\t\t<div className={toggleDropdown?'Username-Container-Active':'Username-Container'}>\n\t\t\t\t<p className='Username-Text'>Hi, {localStorage.getItem(\"username\")}!</p>\n\t\t\t\t<div className=\"Button-Container\">\n\t\t\t\t\t<button className='Dashboard-Button' onClick={()=>navigate('/', { replace: true })}><img alt ='Home'src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/64/000000/external-home-miscellaneous-kiranshastry-lineal-kiranshastry.png\"/></button>\n\t\t\t\t\t<p>Home</p>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<button onClick={(e)=>handleLogout(e)} className='Logout-Button'>Logout</button>\n\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t<div className=\"Title-Container\">\n\t\t\t\t<h1 className=\"Title\">Admin Dashboard</h1>\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"650\" height=\"650\" viewBox=\"-2015 -2000 4030 4030\">\n\t\t\t\t\t\t<path fill=\"#f00\" d=\"m-90 2030 45-863a95 95 0 0 0-111-98l-859 151 116-320a65 65 0 0 0-20-73l-941-762 212-99a65 65 0 0 0 34-79l-186-572 542 115a65 65 0 0 0 73-38l105-247 423 454a65 65 0 0 0 111-57l-204-1052 327 189a65 65 0 0 0 91-27l332-652 332 652a65 65 0 0 0 91 27l327-189-204 1052a65 65 0 0 0 111 57l423-454 105 247a65 65 0 0 0 73 38l542-115-186 572a65 65 0 0 0 34 79l212 99-941 762a65 65 0 0 0-20 73l116 320-859-151a95 95 0 0 0-111 98l45 863z\"/>\n\t\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t\n\t\t</header>\n\t</>\n);\n\n}\n\nexport default AdminNavigation;","/Users/danielnamyslaw/iec-tracker/Frontend/src/HelperFunctions.js",[],["98","99"],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/NewForm.js",[],"/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/NewROIForm.js",["100","101","102","103","104"],"import {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport { getAllCountryROI, getData, isNumber } from '../../HelperFunctions';\n\nimport '../../CSS/Forms/NewROIForm.css';\n\nfunction NewROIForm(){\n\n\tconst [inputClass, setInputClass] = useState([ {Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\n\n\tconst [showForm, setShowForm]= useState(false);\n\tconst [initLoad, setInitLoad] = useState(true);\n\n\tconst [name, setName] = useState('');\n\tconst [candidates, setCandidates] = useState('');\n\tconst [permits, setPermits] = useState('');\n\tconst [invitations, setInvitations] = useState('');\n\tconst [date, setDate] = useState('');\n\n\tconst [candidatesError, setCandidatesError] = useState(false);\n\tconst [permitsError, setPermitsError] = useState(false);\n\tconst [invitationsError, setInvitationsError] = useState(false);\n\tconst [dateError, setDateError] = useState(false);\n\n\n\tconst [searchValue, setSearchValue] = useState('');\n\n\tconst [selectedCountry, setSelectedCountry] = useState([]);\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\n\tconst [prevButton, setPrevButton] = useState('');\n\n\tconst containerRef = useRef();\n\t\n\t//This handles the submisison of the new data, it sends the data to the backend and clears the existing fields.\n\tasync function onSubmit(e){\n\t\te.preventDefault();\n\t\tif(candidates !== '' && permits !== '' && invitations !== '' && date !== ''){\n\t\taxios.post('roi', {\n\t\t\tcountry_name: name,\n\t\t\tcountry_candidates: candidates,\n\t\t\tcountry_permits: permits,\n\t\t\tcountry_invitations: invitations,\n\t\t\tcountry_date: date\n\t\t  })\n\t\t  .then(function (response) {\n\t\t\tsetName('');\n\t\t\tsetCandidates('');\n\t\t\tsetPermits('');\n\t\t\tsetInvitations('');\n\t\t\tsetDate('');\n\t\t  })\n\t\t  .catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t  });\n\t\t}else{\n\t\t\tif(candidates === '') setCandidatesError(true);\n\t\t\tif(permits === '') setPermitsError(true);\n\t\t\tif(invitations === '') setInvitationsError(true);\n\t\t\tif(date === '') setDateError(true);\n\n\t\t}\n\t}\n\t//This function opens the form when a country is clicked. The remainder of it just handles \n\t//the look and function of the buttons when clicked.\n\tfunction toggleROIList(e, name){\n\t\t\n\t\tif(e.currentTarget.className === 'New-ROI-Selector-Button'){\n\t\t\tsetShowForm(true);\n\t\t\tsetName(name);\n\t\t\te.currentTarget.className = 'New-ROI-Selector-Button-Active';\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\tif(i!== 0 && localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'New-ROI-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'New-ROI-Selector-Button'\n\t\t\tsetShowForm(false);\n\t\t\tsetName('');\n\n\t\t}\n\t}\n\n\t//This runs the API helper function that retrieves all the country data.\n\tuseEffect(()=>{\n\t\tif(initLoad){\n\t\t\tgetData().then(res=>{\n\t\t\t\tsetOriginalCountryArr(res.data);\n\t\t\t\tsetCountryArr(res.data);\n\t\t\t})\t\n\t\t\tsetInitLoad(false);\t\t\n\t\t}\n\t},[]);\n\n\t//This function allows for the sliding effect of the placeholder on the form when an input is clicked. The placeholder value moves up so\n\t//that it's still visible when typing. This just handles the switching between classes.\n\tfunction handleActiveinput(e){\n\t\n\t\tif(e._reactName === 'onFocus'){\n\t\t\tswitch(e.target.id){\n\t\t\t\tcase 'Candidates':\n\t\t\t\t\tsetInputClass([{Input:'Input-Active', Label: 'Input-Label-Active'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\t\t\t\t\tsetCandidatesError(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Permits':\n\t\t\t\t\tsetInputClass([{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Active', Label: 'Input-Label-Active'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\t\t\t\t\tsetPermitsError(false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Invitations':\n\t\t\t\t\tsetInputClass([{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Active', Label: 'Input-Label-Active'}]);\n\t\t\t\t\tsetInvitationsError(false);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsetInputClass({Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'});\n\n\t\t\t}\t\n\t\t\t\n\n\t\t}else if(e._reactName === 'onBlur'){\n\t\t\t\n\t\t\tswitch(e.target.id){\n\t\t\t\tcase 'Candidates':\n\t\t\t\t\tsetInputClass([{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Permits':\n\t\t\t\t\tsetInputClass([{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Invitations':\n\t\t\t\t\tsetInputClass([{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'}]);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsetInputClass({Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'},{Input:'Input-Inactive', Label: 'Input-Label'});\n\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\t//We filter the list of countries by what has been typed inside the search box on the form\n\t//if the search value is zero we simply copy the original country array we recieved from the API.\n\tuseEffect(()=>{\n\t\t\n\t\tif(!initLoad){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy);\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase()));\n\t\t\t\n\t\t\t\tsetCountryArr(copyArr);\n\n\t\t\t}\n\t\t}\n\t\t\n\t},[searchValue])\n\t\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"New-ROI-Title\">New Round of Invitations</h1>\n\t\t\t<div className=\"Layout-Wrapper\">\n\t\t\t\t<div className=\"New-ROI-Country-Selector\" ref={containerRef}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder=\"Search..\"\n\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\n\t\t\t\t\t\tclassName=\"New-ROI-Country-Selector-Search\"\n\t\t\t\t\t/>\n\t\t\t\t\t{countryArr.map((country) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={country.country_name}\n\t\t\t\t\t\t\tclassName=\"New-ROI-Selector-Button\"\n\t\t\t\t\t\t\tid={country._id}\n\t\t\t\t\t\t\tonClick={(e) => toggleROIList(e, country.country_name)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{country.country_name}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<form className=\"New-ROI-Form\">\n\t\t\t\t\t{showForm ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{candidates === ''?<label className={inputClass[0].Label}>Candidates</label>:null}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tid='Candidates'\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\tvalue={candidates}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setCandidates(isNumber(e.currentTarget.value))}\n\t\t\t\t\t\t\t\t\tonFocus={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tonBlur={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tclassName={inputClass[0].Input}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{candidatesError? <p className='Error'>Candidates is required!</p>:null}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{permits === ''?<label className={inputClass[1].Label}>Permits</label>:null}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tid='Permits'\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\tvalue={permits}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPermits(isNumber(e.currentTarget.value))}\n\t\t\t\t\t\t\t\t\tonFocus={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tonBlur={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tclassName={inputClass[1].Input}\n\t\t\t\t\t\t\t\t\trequired\n\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{permitsError? <p className='Error'>Permits is required!</p>:null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{invitations===''?<label className={inputClass[2].Label}>Invitations</label>:null}\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tid='Invitations'\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\tvalue={invitations}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setInvitations(isNumber(e.currentTarget.value))}\n\t\t\t\t\t\t\t\t\tonFocus={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tonBlur={(e)=>handleActiveinput(e)}\n\t\t\t\t\t\t\t\t\tclassName={inputClass[2].Input}\n\t\t\t\t\t\t\t\t\trequired\n\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{invitationsError? <p className='Error'>Invitations is required!</p>:null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t\t\tclassName='Input-Inactive'\n\t\t\t\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.currentTarget.value)}\n\t\t\t\t\t\t\t\t\trequired\n\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{dateError? <p className='Error'>Date is required!</p>:null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"ROI-Submit-Button\"\n\t\t\t\t\t\t\t\tonClick={(e) => onSubmit(e)}\n\t\t\t\t\t\t\t>Submit</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</>\n  );\n\n}\nexport default NewROIForm;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditROIForm.js",["105","106","107"],"import {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\nimport { getAllCountryROI, getData, isNumber } from '../../HelperFunctions';\nimport '../../CSS/Forms/EditROIForm.css';\nfunction EditROIForm(){\n\n\tconst [showForm, setShowForm]= useState(false);\n\tconst [showROIList, setShowROIList] = useState(false);\n\tconst [initLoad, setInitLoad] = useState(true);\n\tconst [toggleEditForm, setToggleEditForm] = useState(false);\n\n\tconst [id, setID] = useState('');\n\tconst [name, setName] = useState('');\n\tconst [candidates, setCandidates] = useState('');\n\tconst [permits, setPermits] = useState('');\n\tconst [invitations, setInvitations] = useState('');\n\tconst [date, setDate] = useState('');\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [selectedCountryROI, setSelectedCountryROI] = useState([]);\n\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\n\tconst [prevButton, setPrevButton] = useState('');\n\n\tconst containerRef = useRef();\n\n\t//This function opens the form and gets the required data when a country is clicked. The remainder of it just handles \n\t//the look and function of the buttons when clicked.\n\tfunction toggleROIList(e, name){\n\t\t\n\t\tif(e.currentTarget.className === 'Edit-ROI-Selector-Button'){\n\t\t\tsetShowROIList(true);\n\t\t\te.currentTarget.className = 'Edit-ROI-Selector-Button-Active';\n\t\t\tgetAllCountryROI(name).then(res=>{\n\t\t\t\tsetSelectedCountryROI(res.data);\n\t\t\t\t\n\t\t\t})\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\tif(i!== 0 && localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'Edit-ROI-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'Edit-ROI-Selector-Button';\n\t\t\tsetSelectedCountryROI([]);\n\t\t\tsetShowROIList(false);\n\t\t}\n\t}\n\n\t//This function gathers the single data required to edit that specific ROI and sets the input values to the existing values in the db. \n\t//The remainder of it just handles the look and function of the buttons when clicked.\n\tfunction editForm(e, roiData){\n\t\t\n\t\tif(e.currentTarget.className === 'Edit-ROI-Selector-Button'){\n\t\t\tsetToggleEditForm(true);\n\t\t\tsetID(roiData._id);\n\t\t\tsetName(roiData.country_name);\n\t\t\tsetCandidates(roiData.country_candidates);\n\t\t\tsetPermits(roiData.country_permits);\n\t\t\tsetInvitations(roiData.country_permits);\n\t\t\tsetDate(roiData.country_date);\n\t\t\te.currentTarget.className = 'Edit-ROI-Selector-Button-Active';\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\tif(i!== 0 && localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'Edit-ROI-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'Edit-ROI-Selector-Button';\n\t\t\tsetToggleEditForm(false);\n\t\t\tsetID('');\n\t\t\tsetName('');\n\t\t\tsetCandidates('');\n\t\t\tsetPermits('');\n\t\t\tsetInvitations('');\n\t\t\tsetDate('');\n\t\t}\n\t}\n\t\n\t//After a country has been selected, you can click the back button to the go to th country list. We then hide the ROI list\n\t//clear it and any search value in the search box\n\tfunction handleBackButton(){\n\t\tsetShowROIList(false);\n\t\tsetSelectedCountryROI([]);\n\t\tsetSearchValue('');\n\t}\n\n\t//This is used to send values to the backend to update the correct ROI record. We send all the data to avoid potential empty or incorrect data.\n\tfunction onUpdate(e){\n\t\te.preventDefault();\n\n\t\taxios.put(`roi/${id}`, {\n\t\t\tcountry_name: name,\n    \t\tcountry_candidates: candidates,\n    \t\tcountry_permits: permits,\n    \t\tcountry_invitations: invitations,\n    \t\tcountry_date: date\n\t\t  })\n\t\t  .then(function (response) {\n\t\t\tconsole.log(response);\n\t\t\tsetName('');\n\t\t\tsetCandidates('');\n\t\t\tsetPermits('');\n\t\t\tsetInvitations('');\n\t\t\tsetDate('');\n\t\t\tshowForm(false);\n\t\t  })\n\t\t  .catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t  });\n\t}\n\n\t//This runs the API helper function that retrieves all the country data.\n\tuseEffect(()=>{\n\t\tif(initLoad){\n\t\t\tgetData().then(res=>{\n\t\t\t\tsetOriginalCountryArr(res.data);\n\t\t\t\tsetCountryArr(res.data);\n\t\n\t\t\t})\n\t\t\t\n\t\t\tsetInitLoad(false);\t\n\t\t\t\n\t\t}\n\t},[]);\n\n\t//If ROI list is not open, we filter the list of countries by what has been typed inside the search box on the form\n\t//if the search value is zero we simply copy the original country array we recieved from the API. If the ROI list is open\n\t//we do the same but on the ROI data not the country data.\n\tuseEffect(()=>{\n\t\t\n\t\tif(!initLoad && !showROIList){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy);\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase()));\n\t\t\t\n\t\t\t\tsetCountryArr(copyArr);\n\n\t\t\t}\n\t\t}else if(!initLoad && showROIList){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\n\t\t\t\tvar noSearchCopyROI = [...selectedCountryROI];\n\t\t\t\tsetCountryArr(noSearchCopyROI);\n\t\t\t}else{\n\t\t\t\tvar copyArrROI = [...selectedCountryROI];\n\t\t\t\tcopyArrROI = copyArrROI.filter(country=>country.country_date.includes(searchValue));\n\t\t\t\n\t\t\t\tsetCountryArr(copyArrROI);\n\n\t\t\t}\n\t\t}\n\t\t\n\t},[searchValue])\n\n\n\treturn (\n    <>\n      <h1 className=\"Edit-ROI-Title\">Edit Round of Invitations</h1>\n      <div className=\"Edit-ROI-Wrapper\">\n        <div className=\"Edit-ROI-Country-Selector\" ref={containerRef}>\n          {showROIList && selectedCountryROI.length === 0 ? (\n            <p className=\"No-Records-Message\">No records found</p>\n          ) : null}\n          {showROIList ? (\n            <button className=\"Back-Button\" onClick={() => handleBackButton()}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\" />\n              </svg>\n            </button>\n          ) : null}\n          <input\n            type=\"search\"\n            placeholder=\"Search..\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            className=\"Edit-ROI-Country-Selector-Search\"\n          />\n          {showROIList\n            ? selectedCountryROI.map((roi) => (\n                <button\n                  key={roi._id}\n                  className=\"Edit-ROI-Selector-Button\"\n                  id={roi._id}\n                  onClick={(e) => editForm(e, roi)}\n                >\n                  {roi.country_date}\n                </button>\n              ))\n            : countryArr.map((country) => (\n                <button\n                  key={country.country_name}\n                  className=\"Edit-ROI-Selector-Button\"\n                  id={country._id}\n                  onClick={(e) => toggleROIList(e, country.country_name)}\n                >\n                  {country.country_name}\n                </button>\n              ))}\n          :\n        </div>\n        <form className=\"Edit-ROI-Form\">\n          {toggleEditForm ? (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Candidates\"\n                value={candidates}\n                onChange={(e) => setCandidates(isNumber(e.currentTarget.value))}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Permits Left\"\n                value={permits}\n                onChange={(e) => setPermits(isNumber(e.currentTarget.value))}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Invitations\"\n                value={invitations}\n                onChange={(e) => setInvitations(isNumber(e.currentTarget.value))}\n              />\n              <input\n                type=\"date\"\n                placeholder=\"Date\"\n                value={date}\n                onChange={(e) => setDate(e.currentTarget.value)}\n              />\n              <input\n                type=\"submit\"\n                className=\"ROI-Submit-Button\"\n                onClick={(e) => onUpdate(e)}\n              />\n            </>\n          ) : null}\n        </form>\n      </div>\n    </>\n  );\n\n}\nexport default EditROIForm;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/DeleteROIForm.js",["108","109"],"import {useState, useEffect, useRef} from 'react';\nimport { getAllCountryROI, getData } from '../../HelperFunctions';\nimport axios from 'axios'; \nimport '../../CSS/Forms/DeleteROIForm.css';\nfunction DeleteROIForm(){\n\n\n\tconst [showROIList, setShowROIList] = useState(false);\n\tconst [initLoad, setInitLoad] = useState(true);\n\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [selectedCountryROI, setSelectedCountryROI] = useState([]);\n\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\n\tconst [prevButton, setPrevButton] = useState('');\n\n\tconst containerRef = useRef();\n\n\t//When delete button has been pressed, we send a request to the API to delete the given record.\n\tfunction onDelete(e,id){\n\t\te.preventDefault();\n\t\taxios.delete(`roi/${id}`);\n\t}\n\n\t//This delete form has the added functionality of needing to not only select a country but also the individual ROI\n\t//so when a country has been clicked we get all of the related ROI records and set them to a state array that will\n\t//then be displayed in the form. The rest of the functionality is handling the active/inactive state of the buttons.\n\t//When it's active the color is darker and clearly selected, when you switch to a different value that previous button\n\t//will be changed.\n\tfunction toggleROIList(e, name){\n\t\t\n\t\tif(e.currentTarget.className === 'Delete-ROI-Selector-Button'){\n\t\t\tsetShowROIList(true);\n\t\t\te.currentTarget.className = 'Delete-ROI-Selector-Button-Active';\n\t\t\tgetAllCountryROI(name).then(res=>{\n\t\t\t\tsetSelectedCountryROI(res.data);\t\t\n\t\t\t})\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\tif(i!== 0 && localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'Delete-ROI-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'Delete-ROI-Selector-Button-Active';\n\t\t\tsetSelectedCountryROI([]);\n\t\t\tsetShowROIList(false);\n\t\t}\n\t}\n\n\t//After a country has been selected, you can click the back button to the go to th country list. We then hide the ROI list\n\t//clear it and any search value in the search box\n\tfunction handleBackButton(){\n\t\tsetShowROIList(false);\n\t\tsetSelectedCountryROI([]);\n\t\tsetSearchValue('');\n\t}\n\n\t//This runs the API helper function that retrieves all the country data.\n\tuseEffect(()=>{\n\t\tif(initLoad){\n\t\t\tgetData().then(res=>{\n\t\t\t\tsetOriginalCountryArr(res.data);\n\t\t\t\tsetCountryArr(res.data);\n\t\t\t})\n\t\t\t\n\t\t\tsetInitLoad(false);\t\t\n\t\t}\n\t},[]);\n\n\t//If ROI list is not open, we filter the list of countries by what has been typed inside the search box on the form\n\t//if the search value is zero we simply copy the original country array we recieved from the API. If the ROI list is open\n\t//we do the same but on the ROI data not the country data.\n\tuseEffect(()=>{\n\t\t\n\t\tif(!initLoad && !showROIList){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy);\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase()));\n\t\t\t\n\t\t\t\tsetCountryArr(copyArr);\n\n\t\t\t}\n\t\t}else if(!initLoad && showROIList){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\t\tconsole.log('no search text');\t\t\t\n\t\t\t\tvar noSearchCopyROI = [...selectedCountryROI];\n\t\t\t\tsetCountryArr(noSearchCopyROI);\n\t\t\t}else{\n\t\t\t\tvar copyArrROI = [...selectedCountryROI];\n\t\t\t\tcopyArrROI = copyArrROI.filter(country=>country.country_date.includes(searchValue));\n\t\t\t\n\t\t\t\tsetCountryArr(copyArrROI);\n\n\t\t\t}\n\t\t}\n\t\t\n\t},[searchValue])\n\n\n\treturn(\n\t\t<>\n\t\t<h1 className=\"Delete-ROI-Title\">Delete Round of Invitations</h1>\n      <div className=\"Delete-ROI-Wrapper\">\n        <div className=\"Delete-ROI-Country-Selector\" ref={containerRef}>\n          {showROIList && selectedCountryROI.length === 0 ? (\n            <p className=\"No-Records-Message\">No records found</p>\n          ) : null}\n          {showROIList ? (\n            <button className=\"Back-Button\" onClick={() => handleBackButton()}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\" />\n              </svg>\n            </button>\n          ) : null}\n          <input\n            type=\"search\"\n            placeholder=\"Search..\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            className=\"Delete-ROI-Country-Selector-Search\"\n          />\n          {showROIList\n            ? selectedCountryROI.map(roi => \n\t\t\t\n\t\t\t\t<div key={roi._id} className='Delete-Selector-Container' id={roi._id}>\n\t\t\t\t\t{roi.country_date}\n\t\t\t\t\t<button className='Delete-Roi-Button' onClick={(e) => onDelete(e, roi._id)}>\n\t\t\t\t\t\t<svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\">\n\t\t\t\t\t\t\t<path d=\"M19 24h-14c-1.104 0-2-.896-2-2v-16h18v16c0 1.104-.896 2-2 2m-9-14c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6-5h-20v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2zm-12-2h4v-1h-4v1z\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>)\n\t\n            : countryArr.map((country) => (\n                <button\n                  key={country.country_name}\n                  className=\"Delete-ROI-Selector-Button\"\n                  id={country._id}\n                  onClick={(e) => toggleROIList(e, country.country_name)}\n                >\n                  {country.country_name}\n                </button>\n              ))}\n          :\n        </div>\n      </div>\n    </>\n\n\t);\n\n}\nexport default DeleteROIForm;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/DeleteForm.js",["110"],"import {useRef, useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport {getData} from '../../HelperFunctions';\n\nimport '../../CSS/Forms/DeleteForm.css';\nfunction DeleteForm(){\n\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [initLoad, setInitLoad] = useState(true);\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\tconst containerRef = useRef();\n\n\t//When delete button has been pressed, we send a request to the API to delete the given record.\n\tfunction onDelete(e,id){\n\t\te.preventDefault();\n\t\taxios.delete(`countries/${id}`);\n\t}\n\n\t//We filter the list of countries by what has been typed inside the search box on the form\n\t//if the search value is zero we simply copy the original country array we recieved from the API.\n\tuseEffect(()=>{\n\t\tif(!initLoad){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy.sort());\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase())).sort();\n\t\t\t\tsetCountryArr(copyArr);\n\t\t\t}\n\t\t}else{\n\t\t\tsetInitLoad(false);\n\t\t}\t\t\n\t},[searchValue])\n\n\t//This runs the API helper function that retrieves all the country data.\n\tuseEffect(()=>{\n\n\t\tgetData().then(res=>{\n\t\t\tsetOriginalCountryArr(res.data);\n\t\t\tsetCountryArr(res.data);\n\t\t});\n\t},[]);\n\t\n\n\treturn(\n\t\t<>\n\t\t<h1 className='Delete-Season-Title'> Delete Season Quotas</h1><div className='Delete-Season-Container'>\n\n\t\t<div className='Country-Selector-Delete' ref={containerRef}>\n\t\t\t<input type=\"search\" placeholder=\"Search..\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} className='Country-Selector-Search-Delete' />\n\t\t\t{countryArr.map(country => \n\t\t\t\n\t\t\t<div key={country.country_name} className='Selector-Container' id={country._id}>\n\t\t\t\t{country.country_name}\n\t\t\t\t<button className='Delete-Button' onClick={(e) => onDelete(e, country._id)}>\n\t\t\t\t\t<svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\">\n\t\t\t\t\t\t<path d=\"M19 24h-14c-1.104 0-2-.896-2-2v-16h18v16c0 1.104-.896 2-2 2m-9-14c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6-5h-20v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2zm-12-2h4v-1h-4v1z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</div>)}\n\n\t\t</div>\n\n\t\t</div>\n\t\t</>\n\t);\n\n}\nexport default DeleteForm;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Components/Forms/EditForm.js",["111"],"import {useState, useRef, useEffect} from 'react';\nimport axios from 'axios';\nimport { isNumber } from '../../HelperFunctions';\nimport '../../CSS/Forms/EditForm.css';\n\nimport {getSingleCountry, getData} from '../../HelperFunctions';\n\nfunction EditForm(){\n\n\n\tconst [quota, setQuota] = useState('');\n\tconst [season, setSeason] = useState('');\n\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [prevButton, setPrevButton] = useState('');\n\tconst [initLoad, setInitLoad] = useState(true);\n\n\tconst [originalCountryArr, setOriginalCountryArr]= useState([]);\n\tconst [countryArr, setCountryArr] = useState([]);\n\tconst [selectedCountry, setSelectedCountry] = useState([]);\n\n\tconst [showForm, setShowForm] = useState(false);\n\t\n\n\tconst containerRef = useRef();\n\t//This is used to send values to the backend to update the correct season record. We send all the data to avoid potential empty or incorrect data.\n\tfunction onUpdate(e,id){\n\t\te.preventDefault();\n\n\t\taxios.put(`countries/${id}`, {\n\t\t\tcountry_name: selectedCountry.country_name,\n\t\t\tcountry_quota: quota,\n\t\t\tcountry_season: season\n\t\t})\n\t\t.then(function (response) {\n\t\t\tsetQuota('');\n\t\t\tsetSeason('');\n\t\t\tshowForm(false);\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n\n\t//This function gathers the single data required to edit that specific season. The remainder of it just handles \n\t//the look and function of the buttons when clicked.\n\tfunction toggleForm(e, id){\n\t\t\n\t\tif(e.currentTarget.className === 'Edit-Season-Selector-Button'){\n\t\t\tsetShowForm(true);\n\t\t\te.currentTarget.className = 'Edit-Season-Selector-Button-Active';\n\t\t\tgetSingleCountry(id).then(res=>{\n\t\t\t\tsetSelectedCountry(res.data);\n\t\t\t})\n\t\t\tif(prevButton !== null || typeof prevButton !== 'undefined'){\n\t\t\t\tvar localArr = containerRef.current.childNodes;\n\t\t\t\tfor(let i=0; i <localArr.length; i++){\n\t\t\t\t\t\n\t\t\t\t\tif(i!== 0 && localArr[i].id === prevButton){\n\t\t\t\t\t\tlocalArr[i].className = 'Edit-Season-Selector-Button';\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tsetPrevButton(e.currentTarget.id);\n\t\t}\n\t\telse{\n\t\t\te.currentTarget.className = 'Edit-Season-Selector-Button'\n\t\t\tsetSelectedCountry([]);\n\t\t\tsetShowForm(false);\n\t\t}\n\t}\n\n\t//We filter the list of countries by what has been typed inside the search box on the form\n\t//if the search value is zero we simply copy the original country array we recieved from the API.\n\tuseEffect(()=>{\n\t\t\n\t\tif(!initLoad){\n\t\t\tif(searchValue.length === 0 || searchValue === null || typeof searchValue === 'undefined'){\n\t\t\t\tvar noSearchCopy = [...originalCountryArr];\n\t\t\t\tsetCountryArr(noSearchCopy.sort());\n\t\t\t}else{\n\t\t\t\tvar copyArr = [...originalCountryArr];\n\t\t\t\tcopyArr = copyArr.filter(country=>country.country_name.toLowerCase().includes(searchValue.toLowerCase())).sort();\n\t\t\t\tsetCountryArr(copyArr);\n\t\t\t}\n\t\t}else{\n\t\t\tsetInitLoad(false);\n\t\t}\n\t},[searchValue])\n\n\t//This populates the editable fields with current values when a country has been selected.\n\tuseEffect(()=>{\n\t\tif(selectedCountry !==null || selectedCountry !== 'undefined'){\n\t\t\tsetQuota(selectedCountry.country_quota);\n\t\t\tsetSeason(selectedCountry.country_season);\n\t\t}\n\n\t},[selectedCountry])\n\n\t//This runs the API helper function that retrieves all the country data.\n\tuseEffect(()=>{\n\t\tgetData().then(res=>{\n\t\t\tsetOriginalCountryArr(res.data);\n\t\t\tsetCountryArr(res.data);\n\t\t});\t\n\t},[]);\n\t\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"Edit-Season-Title\"> Edit Season Quotas</h1>\n\t\t\t<div className=\"Edit-Season-Container\">\n\t\t\t\t<div className=\"Edit-Season-Country-Selector\" ref={containerRef}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder=\"Search..\"\n\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\n\t\t\t\t\t\tclassName=\"Edit-Season-Country-Selector-Search\"\n\t\t\t\t\t/>\n\t\t\t\t\t{countryArr.map((country) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={country.country_name}\n\t\t\t\t\t\t\tclassName=\"Edit-Season-Selector-Button\"\n\t\t\t\t\t\t\tid={country._id}\n\t\t\t\t\t\t\tonClick={(e) => toggleForm(e, country._id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{country.country_name}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{showForm ? (\n\t\t\t\t\t<form className=\"Edit-Season-Form\">\n\t\t\t\t\t\t<label>Quota:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={quota}\n\t\t\t\t\t\t\tonChange={(e) => setQuota(isNumber(e.currentTarget.value))}\n\t\t\t\t\t\t\tplaceholder={selectedCountry.country_quota}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label>Season:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={season}\n\t\t\t\t\t\t\tonChange={(e) => setSeason(isNumber(e.currentTarget.value))}\n\t\t\t\t\t\t\tmaxLength={4}\n\t\t\t\t\t\t\tplaceholder={selectedCountry.country_season}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"Edit-Season-Submit-Button\"\n\t\t\t\t\t\t\tonClick={(e) => onUpdate(e, selectedCountry._id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t) : (\n\t\t\t\t\t<form className=\"Edit-Season-Form\"></form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n  );\n\n}\nexport default EditForm;","/Users/danielnamyslaw/iec-tracker/Frontend/src/Assets/Data/QuoteList.js",[],{"ruleId":"112","severity":1,"message":"113","line":4,"column":40,"nodeType":"114","messageId":"115","endLine":4,"endColumn":48},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":115,"column":4,"nodeType":"122","endLine":115,"endColumn":62,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":3,"column":22,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"112","severity":1,"message":"125","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":18},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"112","severity":1,"message":"128","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":26},{"ruleId":"112","severity":1,"message":"129","line":30,"column":9,"nodeType":"114","messageId":"115","endLine":30,"endColumn":24},{"ruleId":"112","severity":1,"message":"130","line":30,"column":26,"nodeType":"114","messageId":"115","endLine":30,"endColumn":44},{"ruleId":"120","severity":1,"message":"131","line":104,"column":4,"nodeType":"122","endLine":104,"endColumn":6,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"133","line":166,"column":4,"nodeType":"122","endLine":166,"endColumn":17,"suggestions":"134"},{"ruleId":"112","severity":1,"message":"135","line":7,"column":19,"nodeType":"114","messageId":"115","endLine":7,"endColumn":30},{"ruleId":"120","severity":1,"message":"131","line":140,"column":4,"nodeType":"122","endLine":140,"endColumn":6,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"137","line":173,"column":4,"nodeType":"122","endLine":173,"endColumn":17,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"131","line":77,"column":4,"nodeType":"122","endLine":77,"endColumn":6,"suggestions":"139"},{"ruleId":"120","severity":1,"message":"137","line":110,"column":4,"nodeType":"122","endLine":110,"endColumn":17,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"133","line":36,"column":4,"nodeType":"122","endLine":36,"endColumn":17,"suggestions":"141"},{"ruleId":"120","severity":1,"message":"133","line":89,"column":4,"nodeType":"122","endLine":89,"endColumn":17,"suggestions":"142"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedCountryData.country_quota'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'Link' is defined but never used.","'adminView' is assigned a value but never used.",["143"],["144"],"'getAllCountryROI' is defined but never used.","'selectedCountry' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initLoad'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'initLoad' and 'originalCountryArr'. Either include them or remove the dependency array.",["147"],"'setShowForm' is assigned a value but never used.",["148"],"React Hook useEffect has missing dependencies: 'initLoad', 'originalCountryArr', 'selectedCountryROI', and 'showROIList'. Either include them or remove the dependency array.",["149"],["150"],["151"],["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"156","fix":"160"},{"desc":"161","fix":"162"},{"desc":"156","fix":"163"},{"desc":"161","fix":"164"},{"desc":"158","fix":"165"},{"desc":"158","fix":"166"},"Update the dependencies array to be: [selectedCountryROIData, selectedCountryData.country_name, selectedCountryData.country_quota]",{"range":"167","text":"168"},"Update the dependencies array to be: [initLoad]",{"range":"169","text":"170"},"Update the dependencies array to be: [initLoad, originalCountryArr, searchValue]",{"range":"171","text":"172"},{"range":"173","text":"170"},"Update the dependencies array to be: [initLoad, originalCountryArr, searchValue, selectedCountryROI, showROIList]",{"range":"174","text":"175"},{"range":"176","text":"170"},{"range":"177","text":"175"},{"range":"178","text":"172"},{"range":"179","text":"172"},[5303,5361],"[selectedCountryROIData, selectedCountryData.country_name, selectedCountryData.country_quota]",[3163,3165],"[initLoad]",[5848,5861],"[initLoad, originalCountryArr, searchValue]",[4294,4296],[5453,5466],"[initLoad, originalCountryArr, searchValue, selectedCountryROI, showROIList]",[2599,2601],[3793,3806],[1281,1294],[2797,2810]]